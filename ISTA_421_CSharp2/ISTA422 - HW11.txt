-- Name: James Silcott
-- File: HW11
-- Date: 8 Oct 2020

 
chapter 11

1. How are user authentication and authorization handled in ASP.NET?

Authentication and authorization are provided by the ASP.NET Core Identity system, which integrates neatly into the ASP.NET Core
platform and the individual application frameworks. In the sections that follow, I will create a basic security setup that allows one
user, called Admin, to authenticate and access the administration features in the application




2. What ASP.NET package supports the database functionality backing the identity system?

Entity Framework Core Package



3. In our Sports Store application, what is the connection string that allows access to our identity
database?

the connection string has to be defined in a single unbroken line in the appsettings.json file and is shown
across multiple lines in the listing only because of the fixed width of a book page. The addition in the listing defines a connection
string called IdentityConnection that specifies a LocalDB database called Identity



4. What methods are required to configure the middleware that supports user authentication and authorization?

In the ConfigureServices method, I extended the Entity Framework Core configuration to register the context class and used
the AddIdentity method to set up the Identity services using the built-in classes to represent users and roles

Configure method, I called the UseAuthentication and UseAuthorization methods to set up the middleware
components that implement the security policy. These methods must appear between the UseRouting and UseEndpoints methods.



5. When you have multiple databases supporting one ASP.NET application, how do you ensure that
specific components use the correct database?

The important difference from previous database commands is that I have used the -context argument to specify the name of
the context class associated with the database that I want to work with, which is AppIdentityDbContext. When you have multiple
databases in the application, it is important to ensure that you are working with the right context class



6. (not in book) In what namespace is the UserManager<T> class located? What is the purpose of the
class? What interface(s) does the class require?
Namespace:
Microsoft.AspNetCore.Identity
Assembly:
Microsoft.Extensions.Identity.Core.dll




7. How are authentication credentials submitted to the application server? What services does the login
manager use in submitting the authentication credentials?


Authentication credentials are submitted to the POST version of the Login method, which uses the
UserManager<IdentityUser> and SignInManager<IdentityUser> services that have been received through the controllerâ€™s
constructor to authenticate the user and log them into the system.


8. How does an ASP.NET application determine the environment in which it is running?

the IWebHostEnvironment parameter defined by the Configure method describes the environment
in which the application is running. The changes mean that the UseExceptionHandler method is called when the application is in
production, but the developer-friendly error pages are used otherwise.



9. How do you define configuration settings for different environments, such as development or production?

The JSON configuration files that are used to define settings such as connection strings can be created so they apply only when the
application is in a specific environment, such as development, staging, or production



10. (not in book) What is Docker? What is a container?


Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. 


A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings.
A container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. 



















